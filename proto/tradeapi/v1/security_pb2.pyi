"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import FinamPy.proto.tradeapi.v1.common_pb2 as common
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _PriceSign:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PriceSignEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_PriceSign.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    PRICE_SIGN_UNSPECIFIED: _PriceSign.ValueType  # 0
    """Value is not specified. Do not use.
    Значение не указано. Не использовать.
    """
    PRICE_SIGN_POSITIVE: _PriceSign.ValueType  # 1
    """Positive.
    Положительная цена.
    """
    PRICE_SIGN_NON_NEGATIVE: _PriceSign.ValueType  # 2
    """Non negative.
    Не отрицательная цена.
    """
    PRICE_SIGN_ANY: _PriceSign.ValueType  # 3
    """Any.
    Любая цена, без ограничения на знак.
    """

class PriceSign(_PriceSign, metaclass=_PriceSignEnumTypeWrapper):
    """Security price sign.
    Разрешенный знак цены у инструмента.
    """

PRICE_SIGN_UNSPECIFIED: PriceSign.ValueType  # 0
"""Value is not specified. Do not use.
Значение не указано. Не использовать.
"""
PRICE_SIGN_POSITIVE: PriceSign.ValueType  # 1
"""Positive.
Положительная цена.
"""
PRICE_SIGN_NON_NEGATIVE: PriceSign.ValueType  # 2
"""Non negative.
Не отрицательная цена.
"""
PRICE_SIGN_ANY: PriceSign.ValueType  # 3
"""Any.
Любая цена, без ограничения на знак.
"""
global___PriceSign = PriceSign

@typing_extensions.final
class Security(google.protobuf.message.Message):
    """Security.
    Инструмент.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CODE_FIELD_NUMBER: builtins.int
    BOARD_FIELD_NUMBER: builtins.int
    MARKET_FIELD_NUMBER: builtins.int
    DECIMALS_FIELD_NUMBER: builtins.int
    LOT_SIZE_FIELD_NUMBER: builtins.int
    MIN_STEP_FIELD_NUMBER: builtins.int
    CURRENCY_FIELD_NUMBER: builtins.int
    INSTRUMENT_CODE_FIELD_NUMBER: builtins.int
    SHORT_NAME_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    TIME_ZONE_NAME_FIELD_NUMBER: builtins.int
    BP_COST_FIELD_NUMBER: builtins.int
    ACCRUED_INTEREST_FIELD_NUMBER: builtins.int
    PRICE_SIGN_FIELD_NUMBER: builtins.int
    TICKER_FIELD_NUMBER: builtins.int
    LOT_DIVIDER_FIELD_NUMBER: builtins.int
    code: builtins.str
    """Security code.
    Код инструмента.
    """
    board: builtins.str
    """Security board.
    Основной режим торгов инструмента.
    """
    market: common.Market.ValueType
    """Market.
    Рынок инструмента.
    """
    decimals: builtins.int
    """Number of decimal digits in the price value.
    Количество знаков в дробной части цены.
    """
    lot_size: builtins.int
    """Lot size.
    Размер лота.
    """
    min_step: builtins.int
    """Price min step.
    Минимальный шаг цены.
    """
    currency: builtins.str
    """Currency.
    Валюта номинала инструмента.
    """
    instrument_code: builtins.str
    """Instrument code.
    Код инструмента.
    """
    short_name: builtins.str
    """Security name.
    Название инструмента.
    """
    properties: builtins.int
    """Параметры инструмента. Значение представлено в виде битовой маски.
    0x00 Нет параметров.
    0x01 Инструмент торгуется на Бирже.
    0x02 Инструмент допущен к торгам у Брокера - существенно для НЕ ГЛАВНЫХ трейдеров, главным доступны все инструменты, торгуемые на биржах.
    0x04 Рыночные заявки (без ограничения по цене) разрешены.
    0x08 Признак маржинальности бумаги.
    0x10 Опцион Call.
    0x20 Опцион Put.
    0x30 Фьючерс: Call | Put.
    0x40 Разрешен для резидентов.
    0x80 Разрешен для нерезидентов.
    """
    time_zone_name: builtins.str
    """Timezone name.
    Имя таймзоны.
    """
    bp_cost: builtins.float
    """The price unit cost for one security (not for the lot)), excluding accrued interest.
    Стоимость пункта цены одного инструмента (не лота), без учета НКД.
    """
    accrued_interest: builtins.float
    """Current accrued interest.
    Текущий НКД.
    """
    price_sign: global___PriceSign.ValueType
    """Allowed price: positive, non negative, any.
    Допустимая цена: положительная, неотрицательная, любая.
    """
    ticker: builtins.str
    """Ticker.
    Код инструмента (тикер) на биржевой площадке листинга.
    """
    lot_divider: builtins.int
    """The split ratio of a security in one standard lot.
    Коэффициент дробления ценной бумаги в одном стандартном лоте.
    """
    def __init__(
        self,
        *,
        code: builtins.str = ...,
        board: builtins.str = ...,
        market: common.Market.ValueType = ...,
        decimals: builtins.int = ...,
        lot_size: builtins.int = ...,
        min_step: builtins.int = ...,
        currency: builtins.str = ...,
        instrument_code: builtins.str = ...,
        short_name: builtins.str = ...,
        properties: builtins.int = ...,
        time_zone_name: builtins.str = ...,
        bp_cost: builtins.float = ...,
        accrued_interest: builtins.float = ...,
        price_sign: global___PriceSign.ValueType = ...,
        ticker: builtins.str = ...,
        lot_divider: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["accrued_interest", b"accrued_interest", "board", b"board", "bp_cost", b"bp_cost", "code", b"code", "currency", b"currency", "decimals", b"decimals", "instrument_code", b"instrument_code", "lot_divider", b"lot_divider", "lot_size", b"lot_size", "market", b"market", "min_step", b"min_step", "price_sign", b"price_sign", "properties", b"properties", "short_name", b"short_name", "ticker", b"ticker", "time_zone_name", b"time_zone_name"]) -> None: ...

global___Security = Security
